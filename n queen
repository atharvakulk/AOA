#include <stdio.h> 
#define N_MAX 8 
 
int N; 
int board[N_MAX][N_MAX]; 
 
int isSafe(int row, int col) { 
    int i, j; 
    for (i = 0; i < col; i++) 
        if (board[row][i]) 
            return 0; 
    for (i = row, j = col; i >= 0 && j >= 0; i--, j--) 
        if (board[i][j]) 
            return 0; 
    for (i = row, j = col; j >= 0 && i < N; i++, j--) 
        if (board[i][j]) 
            return 0; 
    return 1; 
} 
 
int solveNQUtil(int col) { 
    if (col >= N) 
        return 1; 
    for (int i = 0; i < N; i++) { 
        if (isSafe(i, col)) { 
            board[i][col] = 1; 
            if (solveNQUtil(col + 1)) 
                return 1; 
            board[i][col] = 0; 
        } 
    } 
    return 0; 
} 
 
void solveNQ() { 
    printf("Enter the number of queens (max 8): "); 
    scanf("%d", &N); 
     
    if (N > N_MAX || N < 0) { 
        printf("Invalid number of queens. Please enter a number between 1 and 8.\n"); 
        return; 
    } 
 
    for (int i = 0; i < N; i++) 
        for (int j = 0; j < N; j++) 
            board[i][j] = 0; 
 
    if (!solveNQUtil(0)) { 
        printf("Solution does not exist"); 
        return; 
    } 
    for (int i = 0; i < N; i++) { 
for (int j = 0; j < N; j++) 
printf(" %d ", board[i][j]); 
printf("\n"); 
} 
} 
int main() { 
solveNQ(); 
return 0; 
}
